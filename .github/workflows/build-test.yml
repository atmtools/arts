name: Build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-docs
            os: ubuntu-22.04
            preset: default-gcc-conda
            check: "no"
            doc: "yes"
            devenv: "environment-dev-linux.yml"
            jbuild: 4
            jcheck: 2

          - name: linux-default-gcc
            os: ubuntu-22.04
            preset: default-gcc-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-linux.yml"
            jbuild: 4
            jcheck: 2

          - name: linux-debug-gcc
            os: ubuntu-22.04
            preset: debug-gcc-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-linux.yml"
            jbuild: 4
            jcheck: 2

          - name: linux-nofortran-gcc
            os: ubuntu-22.04
            preset: nofortran-gcc-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-linux.yml"
            jbuild: 4
            jcheck: 2

          - name: linux-lgpl-gcc
            os: ubuntu-22.04
            preset: lgpl-gcc-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-linux.yml"
            jbuild: 4
            jcheck: 2

          - name: mac-default-clang
            os: macos-13
            preset: default-clang-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-mac.yml"
            jbuild: 4
            jcheck: 2

          - name: macm1-default-clang
            os: macos-14
            preset: default-clang-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-mac.yml"
            jbuild: 2
            jcheck: 2

          - name: macm1-debug-clang
            os: macos-14
            preset: debug-clang-conda
            check: "yes"
            doc: "no"
            devenv: "environment-dev-mac.yml"
            jbuild: 2
            jcheck: 2

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channels: conda-forge
          channel-priority: true
          activate-environment: arts
          environment-file: ${{ matrix.devenv }}
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: Setup (Linux)
        if: runner.os == 'Linux' && matrix.doc == 'yes'
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra doxygen

      - name: Configure
        shell: bash -l {0}
        run: |
          cmake --preset=${{ matrix.preset }}

      - name: Build PyARTS
        shell: bash -l {0}
        run: |
          cmake --build build -j${{ matrix.jbuild }} --target pyarts

      - name: Docs
        if: matrix.doc == 'yes'
        shell: bash -l {0}
        run: |
          cmake --build build -j${{ matrix.jbuild }} --target apidoc pyarts_docs
          tar -zcf doxygen.tar.gz build/doc/doxygen/html
          tar -zcf sphinx.tar.gz build/python/doc/build

      - name: Check
        if: matrix.check == 'yes'
        shell: bash -l {0}
        run: |
          cmake --build build -j${{ matrix.jcheck }} --target check

      - name: Python Wheel
        if: matrix.check == 'yes'
        shell: bash -l {0}
        run: |
          cmake --build build --target pyarts-package

      - name: Build SRC
        if: matrix.check == 'yes'
        shell: bash -l {0}
        run: |
          make -C build/src -j${{ matrix.jbuild }}

      - uses: actions/upload-artifact@v4
        if: matrix.doc == 'yes'
        with:
          name: docs-doxygen
          path: |
            doxygen.tar.gz

      - uses: actions/upload-artifact@v4
        if: matrix.doc == 'yes'
        with:
          name: docs-sphinx
          path: |
            sphinx.tar.gz
