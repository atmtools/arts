#
# Check consistency of Perrin and HITRAN spectroscopic catalogues.
#
# For Earth cases, Perrin give very similar results compared to HITRAN
#  (deviations only in case spectroscopic parameters have been taken from a
#  different catalogue than HITRAN or have been adapted according to
#  newer/better values from literature).
# Here we evaluate the degree of consistency in (a) absorption coefficients and
#  (b) radiances for a couple of observation geometries.
#
# ??? better use abs cross sections?
#
# Setup:
#   - fixed Earth atmosphere scenario (XXX) from AFGL/Fascode standard atmosphere set
#   - all available species from the standard atmospheres (PLUS dummy profiles
#      for species with spectroscopic data, but no VMR profiles in the standard
#      atmospheres?)
#   - monochromatic calc 0-3THz with spacing of 0.1GHz (smaller at low frequencies?)
#   - 
#   - 
#   - 
#
#
# CAUTION:
#   - HITRAN data is NOT included in the toolbox! Hence, for running the part
#      that uses HITRAN it is required that the user gets his/her own copy of
#      the HITRAN catalogue (and adapt path to the catalogue accordingly).

Arts2 {


LegacyContinuaInit
water_p_eq_agendaSet
gas_scattering_agendaSet
PlanetSet(option="Earth")
#


#######
# 0a) basic settings
#######

AtmosphereSet1D
IndexSet( stokes_dim, 1 )

# use abs LUT
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )

# set the source for catalogues
StringCreate( hitranfile )
StringSet( hitranfile, "/storage5/data/catalogue/hitran/hitran2008/HITRAN08.par" )
StringCreate( catfolder )
StringSet( catfolder, "spectroscopy/Perrin/" )


#######
# 0b) define atm scenario and species, p_grid, f_grid
#######

# frequency grid (full toolbox range)
VectorLinSpace( f_grid, 0e9, 3000e9, 0.1e9 )
WriteXML( "ascii", f_grid )

# set the pressure grids
VectorNLogSpace( p_grid, 51, 1000e2, 0.1 )

# set atmospheric scenario
StringCreate( atmcase )
StringSet( atmcase, "planets/Earth/Fascod/tropical/tropical" )

# read and grid-prepare atmospheric data
INCLUDE "planetary_toolbox/includes/common/Atm-and-SpeciesAllFromScenario.arts"
AtmFieldsCalc


#######
# 1a) Get HITRAN catalogue and do LUT calc, from that get abscoeffs
#######

# read HITRAN08 data up to 3THz and preprocess
abs_linesReadFromHitran( abs_lines, hitranfile, 0., 3000e9 )
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "ARTS3-from-HITRAN08_LUT_inatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "ARTS3-from-HITRAN08_abscoef_inatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "ARTS3-from-HITRAN08_absmatfield_inatm.xml" )


#######
# 1b) convert HITRAN data from ARTS-3 to ARTS-4 catalogue format, then repeat
#      LUT calc and abscoeffs calc
#######

# convert catalogue format
abs_linesArtscat4FromArtscat3
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "ARTS4-from-HITRAN08_LUT_inatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "ARTS4-from-HITRAN08_abscoef_inatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "ARTS4-from-HITRAN08_absmatfield_inatm.xml" )


#######
# 2) Get spectroscopic data from toolbox (Perrin catalogue), do LUT and
#     abscoeffs calc
#######

# read HITRAN08 data up to 3THz and preprocess
abs_linesReadFromSplitArtscat( abs_lines, abs_species, catfolder, 0., 3000e9 )
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "Perrin_LUT_inatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "Perrin_abscoef_inatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "Perrin_absmatfield_inatm.xml" )


#-------------------------------------------------------------------------------
#
# NOW we reset p_grid to contain out-of-defined-atmo points (triggering
#  zero-padding) and repeat ALL the calculations
#

#######
# 0b) define atm scenario and species, p_grid, f_grid
#######

VectorNLogSpace( p_grid, 11, 1050e2, 0.05 )
AtmFieldsCalc


#######
# 1a) Get HITRAN catalogue and do LUT calc, from that get abscoeffs
#######

# read HITRAN08 data up to 3THz and preprocess
abs_linesReadFromHitran( abs_lines, hitranfile, 0., 3000e9 )
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "ARTS3-from-HITRAN08_LUT_outatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "ARTS3-from-HITRAN08_abscoef_outatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "ARTS3-from-HITRAN08_absmatfield_outatm.xml" )


#######
# 1b) convert HITRAN data from ARTS-3 to ARTS-4 catalogue format, then repeat
#      LUT calc and abscoeffs calc
#######

# convert catalogue format
abs_linesArtscat4FromArtscat3
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "ARTS4-from-HITRAN08_LUT_outatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "ARTS4-from-HITRAN08_abscoef_outatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "ARTS4-from-HITRAN08_absmatfield_outatm.xml" )


#######
# 2) Get spectroscopic data from toolbox (Perrin catalogue), do LUT and
#     abscoeffs calc
#######

# read HITRAN08 data up to 3THz and preprocess
abs_linesReadFromSplitArtscat( abs_lines, abs_species, catfolder, 0., 3000e9 )
abs_lines_per_speciesCreateFromLines

# create the LUT
abs_lookupSetup
abs_lookupCalc
WriteXML( "ascii", abs_lookup, "Perrin_LUT_outatm.xml" )

# calculate scalar abs coefs on LUT's p-grid (abs_p)
abs_coefCalc
WriteXML( "ascii", abs_coef_per_species, "Perrin_abscoef_outatm.xml" )

# calculate abs matrix field (the field of vector abscoeffs) on the case's
#   atmospheric grid (p/lat/lon_grid)
abs_mat_fieldCalc
WriteXML( "ascii", abs_mat_field, "Perrin_absmatfield_outatm.xml" )

}
