#DEFINITIONS:  -*-sh-*-
#
# Demonstrates methods for finding the intersections with a particular
# altitude, latitude or the surface.
#
# The methods (except the surface one) have internal asserts checking
# the results so the script performs also some testing
#
Arts2 {


# Special variables
MatrixCreate( pos )
MatrixCreate( los )



# Intersection with an altitude
# -------------------------------------------------------------------------

# Define a bunch of sensor positions and LOS
MatrixSet( sensor_pos, [55e3,45,123;123e3,10,175;20e3,88,-160;5e3,0,-180] )
MatrixSet( sensor_los, [167,-134;145,178;94,0;180,0] )

# Set WGS84 
refellipsoidEarthZZZ( model = "WGS84" )

# Intersection with sea surface level
IntersectionGeometricAltitude( pos=pos, los=los, altitude=0 )
#Print(pos,0)
#Print(los,0)

# Intersection with 10 km level
IntersectionGeometricAltitude( pos=pos, los=los, altitude=10e3 )
#Print(pos,0)
#Print(los,0)

# Redo 0 m with spherical reference ellipsoid
refellipsoidEarthZZZ( model = "Sphere" )
IntersectionGeometricAltitude( pos=pos, los=los, altitude=0 )



# Intersection with the surface
# -------------------------------------------------------------------------

VectorCreate( latitude_grid )
VectorCreate( longitude_grid )
MatrixCreate( elevations )

# Set WGS84 
refellipsoidEarth( model = "WGS84" )

# Define a sensor position and LOS
MatrixSet( sensor_pos, [800e3,12,0] )
MatrixSet( sensor_los, [135,78] )

# Constant elevation 
surface_elevationSetConstant( elevation=0 )
IntersectionGeometricSurface( pos=pos, los=los )
#Print(pos,0)
#Print(los,0)

# A 3D case, but no variation of elevation on longitude dimension
IndexSet( atmosphere_dim, 3 )
VectorSet( latitude_grid, [0,45,45.1,90] )
VectorSet( longitude_grid, [0] )
MatrixSet( elevations, [0;0;100;7e3] )
surface_elevationSet( latitude_grid = latitude_grid,
                     longitude_grid = longitude_grid,
                         elevations = elevations)
IntersectionGeometricSurface( pos=pos,
                              los=los,
                              surface_search_accuracy=0.1,
                              surface_search_safe=1 )
#Print(pos,0)
#Print(los,0)
IntersectionGeometricSurface( pos=pos,
                              los=los,
                              surface_search_accuracy=0.1,
                              surface_search_safe=0 )
#Print(pos,0)
#Print(los,0)


# Intersection with a latitude
# -------------------------------------------------------------------------

# Define a sensor position and LOS
MatrixSet( sensor_pos, [600e3,-80,0] )
MatrixSet( sensor_los, [113,10] )

IntersectionGeometricLatitude( pos=pos, los=los, latitude=-60 )
#Print(pos,0)
#Print(los,0)


# Intersection with a longitude
# -------------------------------------------------------------------------

# Define a sensor position and LOS
MatrixSet( sensor_pos, [55e3,45,125] )
MatrixSet( sensor_los, [115,78] )

IntersectionGeometricLongitude( pos=pos, los=los, longitude=126 )
#Print(pos,0)
#Print(los,0)

}
