#DEFINITIONS:  -*-sh-*-
#
# Demonstration and test of a simple ARTS 1D clear sky calculations.
#
# Observations from a satellite is treated, with a single observation angle.
# RT is done by iyCalc and ySimpleSpectrometer is used.
#
# Author: Patrick Eriksson


Arts2 {


LegacyContinuaInit
water_p_eq_agendaSet
gas_scattering_agendaSet
PlanetSet(option="Earth")
#

# (standard) emission calculation
Copy( iy_main_agenda, iy_main_agenda__Emission )

# cosmic background radiation
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )

# standard surface agenda (i.e., make use of surface_rtprop_agenda)
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )

# sensor-only path
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )

# no refraction
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )


# Number of Stokes components to be computed
#
IndexSet( stokes_dim, 1 )

# No jacobian calculation
#
jacobianOff

# Clearsky = No scattering
#
cloudboxOff


# Read a line file and a matching small frequency grid
# ---
ReadARTSCAT( abs_lines=abs_lines, filename="abs_lines.xml" )
abs_linesCutoff(abs_lines, "ByLine", 750e9)
abs_linesNormalization(abs_lines, "VVH")
VectorNLinSpace( f_grid, 4001, 321e9, 329e9 )


# A pressure grid rougly matching 0 to 80 km, in steps of 2 km.
# ---
VectorNLogSpace( p_grid, 41, 1000e2, 1 )


# Definition of species
# ---
abs_speciesSet( species=
            ["H2O-SelfContStandardType, H2O-ForeignContStandardType, H2O", 
             "N2-SelfContStandardType",
             "O3"] )


# Sort the line file according to species
# ---
abs_lines_per_speciesCreateFromLines

propmat_clearsky_agendaAuto

# Atmospheric scenario
# ---
AtmRawRead( basename = "testdata/tropical" )


# Weakly reflecting surface
# ---
VectorSetConstant( surface_scalar_reflectivity, 1, 0.8 )
Copy( surface_rtprop_agenda,
      surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_surface )


# We select here to use Rayleigh-Jean brightness temperatures
# ---
StringSet( iy_unit, "RJBT" )


# Atmosphere and surface
# ---
AtmosphereSet1D
AtmFieldsCalc
Extract( z_surface, z_field, 0 )
Extract( t_surface, t_field, 0 )


# Definition of sensor position and LOS
# ---
VectorSet( rte_pos, [600e3] )
VectorSet( rte_los, [113.4] )
VectorSet( rte_pos2, [] )     # A dummy value

# Perform RT calculations
# ---
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc
lbl_checkedCalc
#
iyCalc

WriteXML( "ascii", f_grid, "f_grid.xml" )
WriteXML( "ascii", iy, "iy.xml" )


ySimpleSpectrometer( y, y_f, iy, stokes_dim, f_grid, 200e6 )

WriteXML( "ascii", y_f, "y_f.xml" )
WriteXML( "ascii", y, "y.xml" )

}
