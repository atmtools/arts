#DEFINITIONS:  -*-sh-*-
#
# Test and compares three manners to set spectral_radiance_field
#
# 2019-10-27, Patrick Eriksson

Arts2 {


LegacyContinuaInit
water_p_eq_agendaSet
gas_scattering_agendaSet
PlanetSet(option="Earth")
#


# cosmic background radiation
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )

# sensor-only path
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )
NumericSet( ppath_lmax, 100 )

# Geometrical path calculation (i.e., refraction neglected)
#
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )

# Standard RT agendas
#
Copy( iy_main_agenda, iy_main_agenda__Emission )


# Definition of species
# 
abs_speciesSet( species= [ "N2-SelfContStandardType",
                           "O2-PWR98",
                           "H2O-PWR98" ] )


# No line data needed here
# 
abs_lines_per_speciesSetEmpty

propmat_clearsky_agendaAuto

# Atmosphere
#
AtmosphereSet1D
VectorNLogSpace( p_grid, 161, 1013e2, 1 )
AtmRawRead( basename = "testdata/tropical" )
#
AtmFieldsCalc


# Define (a blacbody) surface
#
MatrixSet( z_surface, [0] )
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )
surface_rtprop_agendaSet( option="Blackbody_SurfTFromt_field" )

# Map this to variables used by DISORT
#
VectorSet( surface_scalar_reflectivity, [0] )
VectorExtractFromMatrix( rtp_pos, z_surface, 0, "row" )
InterpAtmFieldToPosition( out=surface_skin_t, field=t_field )




# Frequencies and Stokes dim.
#
IndexSet( stokes_dim, 1 )
VectorSet( f_grid, [184e9] )


# Stuff not used
#
jacobianOff
sensorOff

# Create a za_grid
#
AngularGridsSetFluxCalc( N_za_grid = 20 )

# Perform checks
#
atmfields_checkedCalc
atmgeom_checkedCalc
lbl_checkedCalc
FlagOn( sensor_checked ) 


# We start with pure clear-sky calculations
#
cloudboxOff
cloudbox_checkedCalc
#
Tensor3Create( dummy )
#
spectral_radiance_fieldClearskyPlaneParallel( trans_field = dummy )
#
Tensor7Create( ref_field )
Copy( ref_field, spectral_radiance_field )
#WriteXML( "binary", z_field, "z.xml" )
#WriteXML( "binary", spectral_radiance_field, "f1.xml" )


# Set spectral_radiance_field as full DISORT calculation
#
DisortCalcClearsky( nstreams = 8 )
#WriteXML( "binary", spectral_radiance_field, "f2.xml" )
Compare( ref_field, spectral_radiance_field, 2e-18 )
#Copy( ref_field, spectral_radiance_field )


# For last test, we create an empty cloudbox up to about 10 km
#
cloudboxSetManually(p1=1100e3, p2=220e2, lat1=-1, lat2=-1, lon1=-1, lon2=-1)
pnd_fieldZero
scat_data_checkedCalc


# Run DISORT and use a third method
#
DisortCalc( nstreams = 8 )
Copy( iy_cloudbox_agenda, iy_cloudbox_agenda__QuarticInterpField )
spectral_radiance_fieldExpandCloudboxField
#WriteXML( "binary", spectral_radiance_field, "f3.xml" )
Compare( ref_field, spectral_radiance_field, 2e-18 )

}
