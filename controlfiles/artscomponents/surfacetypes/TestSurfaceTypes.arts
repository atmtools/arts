# This is a basic demonstration of how to work with surface types.
#
#    In short, the geographical distribution of the surface types is
#    set by *surface_type_mask* and the radiative properties of each
#    type is specified by *iy_surface_agenda_array*.
#
#    The radiative properties can also be specified by
#    *surface_rtprop_agenda_array*.


# Patrick Eriksson 2020-09-20

Arts2{

  # Includes
  
  water_p_eq_agendaSet
gas_scattering_agendaSet
LegacyContinuaInit
PlanetSet(option="Earth")
#

  # Agendas (excpept surface ones)
  ppath_agendaSet(option="FollowSensorLosPath")
  ppath_step_agendaSet(option="GeometricPath")
  iy_space_agendaSet
  iy_main_agendaSet(option="Emission")

  # Various basic settings
  AtmosphereSet3D
  IndexSet(stokes_dim, 2 )
  VectorSet( f_grid, [89e9] )
  sensorOff
  AntennaOff
  jacobianOff
  cloudboxOff
  StringSet(iy_unit, "PlanckBT")

  # Absorption
  abs_speciesSet(species=["N2-SelfContStandardType","O2-PWR98","H2O-MPM89"])
  abs_lines_per_speciesSetEmpty
  propmat_clearsky_agendaAuto

  # Atmosphere and surface altitude
  VectorNLogSpace( p_grid, 35, 1013e2, 100e2 )
  VectorLinSpace( lat_grid, -2, 8, 0.5 )
  VectorLinSpace( lon_grid, -35, 25, 1 )
  AtmRawRead(basename="testdata/tropical")
  AtmFieldsCalcExpand1D(vmr_zeropadding=1)
  #
  z_surfaceConstantAltitude( altitude = 0 )

  # Read in variables defining surface properties
  ReadXML(surface_type_mask, "surface_type_mask.xml")
  GriddedField2Create(surface_w_field)
  ReadXML(surface_w_field, "surface_w_field.xml")
  GriddedField2Create(surface_t_field)
  ReadXML(surface_t_field, "surface_t_field.xml")
  TessemNNReadAscii(tessem_neth,"testdata/tessem_sav_net_H.txt")
  TessemNNReadAscii(tessem_netv,"testdata/tessem_sav_net_V.txt")

  # Agendas for the surface
  AgendaSet(iy_surface_agenda){
    SurfaceDummy
    Ignore(nlte_field)
    surface_typeInterpTypeMask(method="linear")
    iySurfaceCallAgendaX
  }
  NumericCreate( wind_speed )
  ArrayOfAgendaAppend( iy_surface_agenda_array ){
    Ignore( agenda_array_index )
    Ignore( surface_type_aux )
    InterpGriddedField2ToPosition( out=surface_skin_t,
                             gfield2=surface_t_field )
    InterpGriddedField2ToPosition( out=wind_speed,
                             gfield2=surface_w_field )
    surfaceTessem( wind_speed = wind_speed )
    iySurfaceRtpropCalc
  }
  ArrayOfAgendaAppend( iy_surface_agenda_array ){
    SurfaceDummy
    Ignore( agenda_array_index )
    specular_losCalc( ignore_surface_slope=1 )
    InterpGriddedField2ToPosition( out=surface_skin_t,
                           gfield2 = surface_t_field )
    VectorSetConstant( surface_scalar_reflectivity, 1, surface_type_aux )
    surfaceFlatScalarReflectivity
    iySurfaceRtpropCalc
  }

  # Sensor pos and los
  MatrixSet(sensor_pos, [800e3,4,-32;800e3,4,-32])
  MatrixSet(sensor_los, [179,90;150,90])

  # Checks
  lbl_checkedCalc
  atmfields_checkedCalc
  atmgeom_checkedCalc
  cloudbox_checkedCalc
  sensor_checkedCalc

  yCalc
  #WriteXML("ascii" , y, "y.xml")
  Print(y,0)
}
