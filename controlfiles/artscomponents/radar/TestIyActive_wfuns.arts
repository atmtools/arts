#DEFINITIONS:  -*-sh-*-
#
# Tests iyRadarSingleScat with respect to Jacobian calculations
#
# The input files to this test were generated by setup_wfun_test.m
#
Arts2 {


LegacyContinuaInit
water_p_eq_agendaSet
gas_scattering_agendaSet
PlanetSet(option="Earth")
#

# Read data from files
ReadXML( p_grid, "testdata/p_grid_wfuntest.xml" )
ReadXML( particle_bulkprop_field, "testdata/particle_bulkprop_field.xml" )
ReadXML( particle_bulkprop_names, "testdata/particle_bulkprop_names.xml" )
ReadXML( f_grid, "testdata/f_grid_wfuntest.xml" )
ReadXML( scat_data_raw, "testdata/scat_data_wfuntest.xml" )
ReadXML( scat_meta, "testdata/scat_meta_wfuntest.xml" )

# Some basic settings
AtmosphereSet1D
IndexSet( stokes_dim, 2 )

# Agenda for scalar gas absorption calculation
Copy(abs_xsec_agenda, abs_xsec_agenda__noCIA)

# on-the-fly absorption
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__OnTheFly )

# Definition of species
abs_speciesSet( species=[ "N2-SelfContStandardType",
                          "O2-PWR93",
                          "H2O-PWR98"
                        ] )

# No line data needed here
abs_lines_per_speciesSetEmpty

# Atmospheric profiles
AtmRawRead( basename = "testdata/tropical" )
#
AtmFieldsCalc

# Get ground altitude (z_surface) from z_field
Extract( z_surface, z_field, 0 )


# scat_species and pnd_agenda
#
StringCreate( species_id_string )
#
# Scat species 0
StringSet( species_id_string, "IWC" )
ArrayOfStringSet( pnd_agenda_input_names, [ "IWC" ] )
ArrayOfAgendaAppend( pnd_agenda_array ){
  ScatSpeciesSizeMassInfo( species_index=agenda_array_index, x_unit="dveq",
                           x_fit_start=100e-6 )
  Copy( psd_size_grid, scat_species_x )
  Copy( pnd_size_grid, scat_species_x )
  psdMcFarquaharHeymsfield97( t_min = 10, t_max = 273, t_min_psd = 210 )
  pndFromPsdBasic
}
Append( scat_species, species_id_string )
Append( pnd_agenda_array_input_names, pnd_agenda_input_names )
#
scat_dataCalc
scat_data_checkedCalc
cloudboxSetFullAtm

# Define radar
#
sensorOff
#
MatrixSet( sensor_pos, [400e3] )
MatrixSet( sensor_los, [180] )
#
ArrayOfIndexSet( instrument_pol, [ 5 ] )
Append( instrument_pol_array, instrument_pol )

#
AgendaSet( iy_main_agenda ){
  Ignore( iy_id )
  Ignore( rte_pos2 )
  Ignore( iy_unit )
  
  iy_transmitterSinglePol
  ppathPlaneParallel( cloudbox_on = 0 )
  iyRadarSingleScat( trans_in_jacobian = 1 )
  VectorSet(geo_pos, [])
}
#
StringSet( iy_unit_radar, "Ze" )
#
VectorLinSpace(range_bins, 0, 15e3, 500 )


# Perform some checks
abs_xsec_agenda_checkedCalc
propmat_clearsky_agenda_checkedCalc
atmfields_checkedCalc
atmgeom_checkedCalc
sensor_checkedCalc
lbl_checkedCalc


# IWC, analytical Jacobian
#
MatrixCreate( Ja )
VectorCreate( rgrid )
Copy( rgrid, p_grid )
#
jacobianInit
#
jacobianAddScatSpecies( 
    species  = "IWC",
    quantity = "IWC",
    g1 = rgrid,
    g2 = lat_grid,
    g3 = lon_grid
)
#jacobianAddAbsSpecies( 
#    species  = "H2O-PWR98",
#    unit     = "vmr",
#    g1       = rgrid,
#    g2       = lat_grid,
#    g3       = lon_grid
#)
#jacobianAddTemperature( 
#    hse = "off",
#    g1  = rgrid,
#    g2  = lat_grid,
#    g3  = lon_grid
#)
#
jacobianClose
#
pnd_fieldCalcFromParticleBulkProps
#
cloudbox_checkedCalc
yRadar
#
Copy( Ja, jacobian )
#WriteXML( in=y, filename="y0.xml" )
#WriteXML( in=jacobian, filename="J_iwc_analytical.xml" )


# IWC, perturbation Jacobian
#
MatrixCreate( Jp )
IndexNumberOfAtmosphericPoints( n = ybatch_n, p_grid=rgrid )
NumericCreate( perturbation )
NumericSet( perturbation, 1e-9 )
jacobianOff
pnd_fieldCalcFromParticleBulkProps
cloudbox_checkedCalc
#
AgendaSet(ybatch_calc_agenda){
  particle_bulkprop_fieldPerturb( p_ret_grid = rgrid,
                                  lat_ret_grid = lat_grid,
                                  lon_ret_grid =  lon_grid,
                                  particle_type = "IWC",
                                  pert_index = ybatch_index,
                                  pert_size = perturbation,
                                  pert_mode = "absolute" )
  pnd_fieldCalcFromParticleBulkProps
  yRadar
}
#
ybatchCalc( ybatch_start=0 )
jacobianFromYbatch( pert_size = perturbation )
Copy( Jp, jacobian )
#WriteXML( in=jacobian, filename="J_iwc_perturbation.xml" )
# 
CompareRelative( Jp, Ja, 1 )


# H2O, analytical Jacobian
#
Copy( rgrid, p_grid )
#
jacobianInit
#
jacobianAddAbsSpecies( 
    species  = "H2O-PWR98",
    unit     = "rel",
    g1       = rgrid,
    g2       = lat_grid,
    g3       = lon_grid
)
#jacobianAddTemperature( 
#    hse = "off",
#    g1  = rgrid,
#    g2  = lat_grid,
#    g3  = lon_grid
#)
#
jacobianClose
#
pnd_fieldCalcFromParticleBulkProps
#
cloudbox_checkedCalc
yRadar
#
Copy( Ja, jacobian )
#WriteXML( in=jacobian, filename="J_h2o_analytical.xml" )


# H2O, perturbation Jacobian
#
IndexNumberOfAtmosphericPoints( n = ybatch_n, p_grid=rgrid )
NumericSet( perturbation, 1e-3 )
jacobianOff
pnd_fieldCalcFromParticleBulkProps
cloudbox_checkedCalc
#
AgendaSet(ybatch_calc_agenda){
  vmr_fieldPerturb( p_ret_grid = rgrid,
                    lat_ret_grid = lat_grid,
                    lon_ret_grid =  lon_grid,
                    species = "H2O-PWR98",
                    pert_index = ybatch_index,
                    pert_size = perturbation,
                    pert_mode = "relative" )
  yRadar
}
#
ybatchCalc( ybatch_start=0 )
jacobianFromYbatch( pert_size = perturbation )
Copy( Jp, jacobian )
#WriteXML( in=jacobian, filename="J_h2o_perturbation.xml" )
# 
CompareRelative( Ja, Jp, 0.2 )


Exit
#
# Code below looks at the temperature Jacobian. For temperature we expect
# significant differences as the analytical version assumes that dPSD/dT is
# zero, while this term is non-zero in the perturbation calculations. 
#

# Temperature, analytical Jacobian
#
Copy( rgrid, p_grid )
#
jacobianInit
#
jacobianAddTemperature( 
    hse = "off",
    g1  = rgrid,
    g2  = lat_grid,
    g3  = lon_grid
)
#
jacobianClose
#
pnd_fieldCalcFromParticleBulkProps
#
cloudbox_checkedCalc
yRadar
#
Copy( Ja, jacobian )
#WriteXML( in=jacobian, filename="J_t_analytical.xml" )


# Temparature, perturbation Jacobian
#
IndexNumberOfAtmosphericPoints( n = ybatch_n, p_grid=rgrid )
NumericSet( perturbation, 0.1 )
jacobianOff
pnd_fieldCalcFromParticleBulkProps
cloudbox_checkedCalc
#
AgendaSet(ybatch_calc_agenda){
  AtmFieldPerturb( perturbed_field = t_field,
                   original_field = t_field,
                   p_ret_grid = rgrid,
                   lat_ret_grid = lat_grid,
                   lon_ret_grid =  lon_grid,
                   pert_index = ybatch_index,
                   pert_size = perturbation,
                   pert_mode = "absolute" )
  yRadar
}
#
ybatchCalc( ybatch_start=0 )
jacobianFromYbatch( pert_size = perturbation )
Copy( Jp, jacobian )
#WriteXML( in=jacobian, filename="J_t_perturbation.xml" )

}
